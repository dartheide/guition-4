
# LVGL configuration
lvgl:
  pages:
    - id: start_page
      styles: bg_white
      widgets:
        - obj: # Weer
            x: 10
            y: 40
            width: 225
            height: 150
            styles: bg_white

            widgets:
              - label:
                  text_font: weather_icons
                  id: home_weather_icon
                  text: "\U000F0599"
              - label:
                  text_font: roboto16
                  align: bottom_left
                  y: -30
                  id: label_temperature
                  text: "-"
              - label:
                  text_font: roboto16
                  align: bottom_left
                  y: -5
                  id: label_uv_index
                  text: "-"
              - label:
                  text_font: roboto16
                  align: bottom_right
                  id: forecast_temperature_current
                  text: '"'
 
        - obj: # Energiescherm
            x: 245
            y: 40
            width: 225
            height: 150
            styles: bg_white
            scrollbar_mode: "OFF"
            widgets:
              - meter:
                  height: 120
                  width: 205
                  border_width: 0
                  bg_opa: TRANSP
                  align: CENTER
                  scales:
                    - range_from: -2000
                      range_to: 2000
                      angle_range: 180 # sets the total angle to 180 = starts mid left and ends mid right
                      ticks:
                        count: 0
                      indicators:
                        - line:
                            id: val_needle
                            width: 8
                            r_mod: 12 # sets line length by this much difference from the scale default radius
                            value: 0
                        - arc: # first half of the scale background
                            color: 0x00FF00 # green
                            r_mod: 10 # radius difference from the scale default radius
                            width: 31
                            start_value: -2000
                            end_value: 0
                        - arc: # second half of the scale background
                            color: 0xFF3000 # red
                            r_mod: 10
                            width: 31
                            start_value: 0
                            end_value: 2000
              - obj: # to cover the middle part of meter indicator line
                  radius: 70
                  styles: bg_white
                  pad_all: 0
                  align: CENTER
                  y: 40
              - label: # gauge numeric indicator
                  id: val_text
                  text_font: roboto20
                  align: bottom_mid
                  y: -20
                  text: 0
              - label: # 
                  text_font: roboto14
                  align: bottom_mid
                  y: 10
                  text: Grid

        - obj: # Agenda
            x: 10
            y: 200
            width: 225
            height: 160
            styles: bg_white
              
        - obj: # Trein lijst
            x: 245
            y: 200
            width: 225
            height: 160
            styles: bg_white


        - obj: # Status
                x: 10
                y: 370
                width: 460
                height: 50
                styles: bg_white

binary_sensor:
  - platform: status
    name: Status sensor

sensor:
  - platform: homeassistant
    id: sensor_sum_power_total
    entity_id: sensor.sum_power_total
    internal: true
    on_value:
      - lvgl.indicator.update:
          id: val_needle
          value: !lambda return x;
      - lvgl.label.update:
          id: val_text
          text:
            format: "%.0f W"
            args: [ 'x' ]


  - platform: homeassistant
    id: temperature_state_sensor
    entity_id: sensor.home_outdoor_temperature
    on_value:
      - lvgl.label.update:
          id: label_temperature
          text:
            format: "Temperatuur %.0f C"
            args: [ 'x' ]

  - platform: homeassistant
    id: uv_index_state_sensor
    entity_id: weather.forecast_home
    attribute: uv_index
    on_value:
      - lvgl.label.update:
          id: label_uv_index
          text:
            format: "Uv index %.0f"
            args: [ 'x' ]

text_sensor:
  - platform: homeassistant
    id: weather_state_text_sensor
    entity_id: weather.forecast_home
    on_value:
      - if:
          condition:
            or:
              - lambda: 'return id(weather_state_text_sensor).state == "sunny";'
              - lambda: 'return id(weather_state_text_sensor).state == "clear";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${sunny}
      - if:
          condition:
            or:
              - lambda: 'return id(weather_state_text_sensor).state == "clear-night";'
              - lambda: 'return id(weather_state_text_sensor).state == "night";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${clearnight}
      - if:
          condition:
            - lambda: 'return id(weather_state_text_sensor).state == "partlycloudy";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${partlycloudy}
      - if:
          condition:            
            and:              
              - lambda: 'return id(weather_state_text_sensor).state == "cloudy";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${cloudy}
      - if:
          condition:
            - lambda: 'return id(weather_state_text_sensor).state == "rainy";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${rainy}
      - if:
          condition:
            - lambda: 'return id(weather_state_text_sensor).state == "pouring";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${pouring} 
      - if:
          condition:
            - lambda: 'return id(weather_state_text_sensor).state == "hail";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${hail}   
      - if:
          condition:
            - lambda: 'return id(weather_state_text_sensor).state == "snowy";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${snowy}
      - if:
          condition:
            - lambda: 'return id(weather_state_text_sensor).state == "windy";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${windy}
      - if:
          condition:
            or:
              - lambda: 'return id(weather_state_text_sensor).state == "lightning";'
              - lambda: 'return id(weather_state_text_sensor).state == "lightning-rainy";'
              - lambda: 'return id(weather_state_text_sensor).state == "thender";'
          then:
            - lvgl.label.update:
                id: home_weather_icon
                text: ${lightning}


substitutions:
  clearnight: "\U000F0594"
  cloudy: "\U000F0590"
  exceptional: "\U000F0F2F"
  fog: "\U000F0591"
  hail: "\U000F0592"
  lightning: "\U000F0593"
  lightningrainy: "\U000F067E"
  partlycloudy: "\U000F0595"
  pouring: "\U000F0596"
  rainy: "\U000F0597"
  snowy: "\U000F0598"
  snowyrainy: "\U000F067F"
  sunny: "\U000F0599"
  windy: "\U000F059D"
  windyvariant: "\U000F059E"
  sunnyoff: "\U000F14E4"



font:
  - file: "fonts/materialdesignicons-webfont.ttf"
    id: weather_icons
    size: 48
    bpp: 4
    glyphs: [
      "\U000F0594", # clear-night
      "\U000F0590", # cloudy
      "\U000F0F2F", # exceptional
      "\U000F0591", # fog
      "\U000F0592", # hail
      "\U000F0593", # lightning
      "\U000F067E", # lightning-rainy
      "\U000F0595", # partlycloudy
      "\U000F0596", # pouring
      "\U000F0597", # rainy
      "\U000F0598", # snowy
      "\U000F067F", # snowy-rainy
      "\U000F0599", # sunny
      "\U000F059D", # windy
      "\U000F059E", # windy-variant
      "\U000F14E4", # sunny-off
      ]

# action: weather.get_forecasts
# target:
#   entity_id: weather.forecast_home
# data:
#   type: daily

# weather.forecast_home:
#   forecast:
#     - condition: cloudy
#       datetime: "2025-01-25T11:00:00+00:00"
#       wind_bearing: 271.7
#       uv_index: 0
#       temperature: 3
#       templow: 1.9
#       wind_speed: 7.6
#       precipitation: 0
#       humidity: 91
#     - condition: sunny
#       datetime: "2025-01-26T11:00:00+00:00"
#       wind_bearing: 196
#       uv_index: 0.7
#       temperature: 6.9
#       templow: 1.3
#       wind_speed: 27
#       precipitation: 0.3
#       humidity: 86
#     - condition: partlycloudy
#       datetime: "2025-01-27T11:00:00+00:00"
#       wind_bearing: 225.8
#       uv_index: 0.7
#       temperature: 10
#       templow: 7
#       wind_speed: 33.5
#       precipitation: 7.2
#       humidity: 86
#     - condition: rainy
#       datetime: "2025-01-28T11:00:00+00:00"
#       wind_bearing: 210
#       uv_index: 0
#       temperature: 8.1
#       templow: 6.6
#       wind_speed: 28.8
#       precipitation: 2.1
#       humidity: 76
#     - condition: rainy
#       datetime: "2025-01-29T11:00:00+00:00"
#       wind_bearing: 201.8
#       temperature: 7.3
#       templow: 5
#       wind_speed: 21.2
#       precipitation: 4.2
#       humidity: 70
#     - condition: rainy
#       datetime: "2025-01-30T11:00:00+00:00"
#       wind_bearing: 213.1
#       temperature: 8.1
#       templow: 5.4
#       wind_speed: 19.1
#       precipitation: 0.6
#       humidity: 78

