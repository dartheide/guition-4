
# LVGL configuration
lvgl:
  pages:
    - id: weather_page
      styles: bg_white
      widgets:
        - obj: # achtergrond
            x: 10
            y: 40
            width: 460
            height: 375
            styles: bg_white
            widgets:
              - label:
                  text_font: roboto20
                  text: "Weersverwachting"
                  align: top_left
                  y: 20
            on_press:
                then:
                  lvgl.page.show: start_page

        - obj: # Dag 0
            x: 25
            y: 150
            width: 100
            height: 240
            styles: bg_white
            bg_color: 0x1a237e
            scrollbar_mode: "OFF"
            widgets:
              - label:
                  id: text_dag_0
                  text: "dag"
                  align: top_mid
              - label:
                  text_font: weather_icons
                  id: home_weather_icon_0
                  text: "-"
                  align: center
                  y: -30
              - label:
                  id: text_temperature_high_0
                  text: "-"
                  align: center
                  y: 20
              - label:
                  id: text_temperature_low_0
                  text: "/-"
                  align: center
                  y: 50                  
              - label:
                  id: text_uv_index_0
                  text: "uv "
                  align: bottom_mid
            on_press:
                then:
                  lvgl.page.show: start_page

        - obj: # Dag 1
            x: 135
            y: 150
            width: 100
            height: 240
            styles: bg_white
            bg_color: 0x1a237e
            scrollbar_mode: "OFF"
            widgets:
              - label:
                  id: text_dag_1
                  text: "dag"
                  align: top_mid
              - label:
                  text_font: weather_icons
                  id: home_weather_icon_1
                  text: "-"
                  align: center
                  y: -30
              - label:
                  id: text_temperature_high_1
                  text: "-"
                  align: center
                  y: 20
              - label:
                  id: text_temperature_low_1
                  text: "/-"
                  align: center
                  y: 50                  
              - label:
                  id: text_uv_index_1
                  text: "uv 6"
                  align: bottom_mid
            on_press:
                then:
                  lvgl.page.show: start_page

        - obj: # Dag 2
            x: 245
            y: 150
            width: 100
            height: 240
            styles: bg_white
            bg_color: 0x1a237e
            scrollbar_mode: "OFF"
            widgets:
              - label:
                  id: text_dag_2
                  text: "dag"
                  align: top_mid
              - label:
                  text_font: weather_icons
                  id: home_weather_icon_2
                  text: "-"
                  align: center
                  y: -30
              - label:
                  id: text_temperature_high_2
                  text: "-"
                  align: center
                  y: 20
              - label:
                  id: text_temperature_low_2
                  text: "/-"
                  align: center
                  y: 50                  
              - label:
                  id: text_uv_index_2
                  text: "uv 6"
                  align: bottom_mid
            on_press:
                then:
                  lvgl.page.show: start_page
                  
                  
        - obj: # Dag 3
            x: 355
            y: 150
            width: 100
            height: 240
            styles: bg_white
            bg_color: 0x1a237e
            scrollbar_mode: "OFF"
            widgets:
              - label:
                  id: text_dag_3
                  text: "dag"
                  align: top_mid
              - label:
                  text_font: weather_icons
                  id: home_weather_icon_3
                  text: "-"
                  align: center
                  y: -30
              - label:
                  id: text_temperature_high_3
                  text: "-"
                  align: center
                  y: 20
              - label:
                  id: text_temperature_low_3
                  text: "/-"
                  align: center
                  y: 50                  
              - label:
                  id: text_uv_index_3
                  text: "uv 6"
                  align: bottom_mid
            on_press:
                then:
                  lvgl.page.show: start_page



sensor:
  - platform: homeassistant
    id: temperature_state_sensor
    entity_id: sensor.home_outdoor_temperature
    on_value:
      - lvgl.label.update:
          id: label_temperature_now
          text:
            format: "Temp buiten %.0f °"
            args: [ 'x' ]

  - platform: homeassistant
    id: uv_index_state_sensor
    entity_id: weather.forecast_home
    attribute: uv_index
    on_value:
     - lvgl.label.update:
          id: label_uv_index_now
          text:
            format: "Uv index %.0f"
            args: [ 'x' ]

text_sensor:
  - platform: homeassistant
    id: weather_week_dag_0
    entity_id: sensor.weather_data
    attribute: weather_week_dag_0
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_dag_0), (id(weather_week_dag_0).state).c_str());
  - platform: homeassistant
    id: weather_week_dag_1
    entity_id: sensor.weather_data
    attribute: weather_week_dag_1
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_dag_1), (id(weather_week_dag_1).state).c_str());
  - platform: homeassistant
    id: weather_week_dag_2
    entity_id: sensor.weather_data
    attribute: weather_week_dag_2
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_dag_2), (id(weather_week_dag_2).state).c_str());
  - platform: homeassistant
    id: weather_week_dag_3
    entity_id: sensor.weather_data
    attribute: weather_week_dag_3
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_dag_3), (id(weather_week_dag_3).state).c_str());

  - platform: homeassistant
    id: weather_uv_index_0
    entity_id: sensor.weather_data
    attribute: weather_temperature_uv_index_0
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_uv_index_0), ("uv " + (id(weather_uv_index_0).state)).c_str());

  - platform: homeassistant
    id: weather_uv_index_1
    entity_id: sensor.weather_data
    attribute: weather_temperature_uv_index_1
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_uv_index_1), ("uv " + (id(weather_uv_index_1).state)).c_str());

  - platform: homeassistant
    id: weather_uv_index_2
    entity_id: sensor.weather_data
    attribute: weather_temperature_uv_index_2
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_uv_index_2), ("uv " + (id(weather_uv_index_2).state)).c_str());

  - platform: homeassistant
    id: weather_uv_index_3
    entity_id: sensor.weather_data
    attribute: weather_temperature_uv_index_3
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_uv_index_3), ("uv " + (id(weather_uv_index_3).state)).c_str());

  - platform: homeassistant
    id: weather_temp_high_0
    entity_id: sensor.weather_data
    attribute: weather_temperature_0
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_temperature_high_0), ("\U000F10C2 " + (id(weather_temp_high_0).state) + "°").c_str());
            lv_label_set_text(id(forecast_temperature_current_high), ("\U000F10C2 " + (id(weather_temp_high_0).state) + "°").c_str());

  - platform: homeassistant
    id: weather_temp_high_1
    entity_id: sensor.weather_data
    attribute: weather_temperature_1
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_temperature_high_1), ("\U000F10C2 " + (id(weather_temp_high_1).state) + "°").c_str());

  - platform: homeassistant
    id: weather_temp_high_2
    entity_id: sensor.weather_data
    attribute: weather_temperature_2
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_temperature_high_2), ("\U000F10C2 " + (id(weather_temp_high_2).state) + "°").c_str());

  - platform: homeassistant
    id: weather_temp_high_3
    entity_id: sensor.weather_data
    attribute: weather_temperature_3
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_temperature_high_3), ("\U000F10C2 " + (id(weather_temp_high_3).state) + "°").c_str());

  - platform: homeassistant
    id: weather_temp_low_0
    entity_id: sensor.weather_data
    attribute: weather_temperature_low_0
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_temperature_low_0), ("\U000F10C3 " + (id(weather_temp_low_0).state) + "°").c_str());
            lv_label_set_text(id(forecast_temperature_current_low), ("\U000F10C3 " + (id(weather_temp_low_0).state) + "°").c_str());

  - platform: homeassistant
    id: weather_temp_low_1
    entity_id: sensor.weather_data
    attribute: weather_temperature_low_1
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_temperature_low_1), ("\U000F10C3 " + (id(weather_temp_low_1).state) + "°").c_str());

  - platform: homeassistant
    id: weather_temp_low_2
    entity_id: sensor.weather_data
    attribute: weather_temperature_low_2
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_temperature_low_2), ("\U000F10C3 " + (id(weather_temp_low_2).state) + "°").c_str());
  - platform: homeassistant
    id: weather_temp_low_3
    entity_id: sensor.weather_data
    attribute: weather_temperature_low_3
    on_value:
      then:
        - lambda: |-
            lv_label_set_text(id(text_temperature_low_3), ("\U000F10C3 " + (id(weather_temp_low_3).state) + "°").c_str());

  - platform: homeassistant
    id: weather_condition_now
    entity_id: sensor.weather_data
    attribute: weather_condition_now
    on_value:
      then:
        - lambda: |-
            std::string condition;  
            std::string icon;          
            if (id(weather_condition_now).state == "sunny") {
              condition = "Zonnig";
              icon = "\U000F0599";  // MDI:weather-sunny
            } else if (id(weather_condition_now).state == "clear-night") {
              condition = "Heldere nacht";
              icon = "\U000F0594";  // MDI:weather-night
            } else if (id(weather_condition_now).state == "partlycloudy") {
              condition = "Gedeeltelijk bewolkt";
              icon = "\U000F0595";  // MDI:weather-partly-cloudy
            } else if (id(weather_condition_now).state == "night-partly-cloudy") {
              condition = "Gedeeltelijk bewolkt";
              icon = "\U000F0F31";  // MDI:weather-partly-cloudy            
            } else if (id(weather_condition_now).state == "cloudy") {
              condition = "Bewolkt";
              icon = "\U000F0590";  // MDI:weather-cloudy
            } else if (id(weather_condition_now).state == "rainy") {
              condition = "Regenachtig";
              icon = "\U000F058E";  // MDI:weather-rainy
            } else if (id(weather_condition_now).state == "lightning") {
              condition = "Onweer";
              icon = "\U000F0596";  // MDI:weather-lightning
            } else if (id(weather_condition_now).state == "snowy") {
              condition = "Sneeuw";
              icon = "\U000F0598";  // MDI:weather-snowy
            } else if (id(weather_condition_now).state == "fog") {
              condition = "Mistig";
              icon = "\U000F0591";  // MDI:weather-fog
            } else {
              condition = "Onbekend";
              icon = "\U000F05A9";  // MDI:help-circle
            }
            lv_label_set_text(id(text_weather_condition_now), (condition).c_str());
            lv_label_set_text(id(home_weather_icon_now), (icon).c_str());
            lv_label_set_text(id(home_weather_icon_0), (icon).c_str());

  - platform: homeassistant
    id: weather_condition_1
    entity_id: sensor.weather_data
    attribute: weather_condition_1
    on_value:
      then:
        - lambda: |-
            std::string condition;  
            std::string icon;          
            if (id(weather_condition_1).state == "sunny") {
              condition = "Zonnig";
              icon = "\U000F0599";  // MDI:weather-sunny
            } else if (id(weather_condition_1).state == "clear-night") {
              condition = "Heldere nacht";
              icon = "\U000F0594";  // MDI:weather-night
            } else if (id(weather_condition_1).state == "partlycloudy") {
              condition = "Gedeeltelijk bewolkt";
              icon = "\U000F0595";  // MDI:weather-partly-cloudy
            } else if (id(weather_condition_1).state == "cloudy") {
              condition = "Bewolkt";
              icon = "\U000F0590";  // MDI:weather-cloudy
            } else if (id(weather_condition_1).state == "rainy") {
              condition = "Regenachtig";
              icon = "\U000F058E";  // MDI:weather-rainy
            } else if (id(weather_condition_1).state == "lightning") {
              condition = "Onweer";
              icon = "\U000F0596";  // MDI:weather-lightning
            } else if (id(weather_condition_1).state == "snowy") {
              condition = "Sneeuw";
              icon = "\U000F0598";  // MDI:weather-snowy
            } else if (id(weather_condition_1).state == "fog") {
              condition = "Mistig";
              icon = "\U000F0591";  // MDI:weather-fog
            } else {
              condition = "Onbekend";
              icon = "\U000F05A9";  // MDI:help-circle
            }
            // lv_label_set_text(id(text_weather_condition_1), (condition).c_str());
            lv_label_set_text(id(home_weather_icon_1), (icon).c_str());

  - platform: homeassistant
    id: weather_condition_2
    entity_id: sensor.weather_data
    attribute: weather_condition_2
    on_value:
      then:
        - lambda: |-
            std::string condition;  
            std::string icon;          
            if (id(weather_condition_2).state == "sunny") {
              condition = "Zonnig";
              icon = "\U000F0599";  // MDI:weather-sunny
            } else if (id(weather_condition_2).state == "clear-night") {
              condition = "Heldere nacht";
              icon = "\U000F0594";  // MDI:weather-night
            } else if (id(weather_condition_2).state == "partlycloudy") {
              condition = "Gedeeltelijk bewolkt";
              icon = "\U000F0595";  // MDI:weather-partly-cloudy
            } else if (id(weather_condition_2).state == "cloudy") {
              condition = "Bewolkt";
              icon = "\U000F0590";  // MDI:weather-cloudy
            } else if (id(weather_condition_2).state == "rainy") {
              condition = "Regenachtig";
              icon = "\U000F058E";  // MDI:weather-rainy
            } else if (id(weather_condition_2).state == "lightning") {
              condition = "Onweer";
              icon = "\U000F0596";  // MDI:weather-lightning
            } else if (id(weather_condition_2).state == "snowy") {
              condition = "Sneeuw";
              icon = "\U000F0598";  // MDI:weather-snowy
            } else if (id(weather_condition_2).state == "fog") {
              condition = "Mistig";
              icon = "\U000F0591";  // MDI:weather-fog
            } else {
              condition = "Onbekend";
              icon = "\U000F05A9";  // MDI:help-circle
            }
            // lv_label_set_text(id(text_weather_condition_2), (condition).c_str());
            lv_label_set_text(id(home_weather_icon_2), (icon).c_str());

  - platform: homeassistant
    id: weather_condition_3
    entity_id: sensor.weather_data
    attribute: weather_condition_3
    on_value:
      then:
        - lambda: |-
            std::string condition;  
            std::string icon;          
            if (id(weather_condition_3).state == "sunny") {
              condition = "Zonnig";
              icon = "\U000F0599";  // MDI:weather-sunny
            } else if (id(weather_condition_3).state == "clear-night") {
              condition = "Heldere nacht";
              icon = "\U000F0594";  // MDI:weather-night
            } else if (id(weather_condition_3).state == "partlycloudy") {
              condition = "Gedeeltelijk bewolkt";
              icon = "\U000F0595";  // MDI:weather-partly-cloudy
            } else if (id(weather_condition_3).state == "cloudy") {
              condition = "Bewolkt";
              icon = "\U000F0590";  // MDI:weather-cloudy
            } else if (id(weather_condition_3).state == "rainy") {
              condition = "Regenachtig";
              icon = "\U000F058E";  // MDI:weather-rainy
            } else if (id(weather_condition_3).state == "lightning") {
              condition = "Onweer";
              icon = "\U000F0596";  // MDI:weather-lightning
            } else if (id(weather_condition_3).state == "snowy") {
              condition = "Sneeuw";
              icon = "\U000F0598";  // MDI:weather-snowy
            } else if (id(weather_condition_3).state == "fog") {
              condition = "Mistig";
              icon = "\U000F0591";  // MDI:weather-fog
            } else {
              condition = "Onbekend";
              icon = "\U000F05A9";  // MDI:help-circle
            }
            // lv_label_set_text(id(text_weather_condition_3), (condition).c_str());
            lv_label_set_text(id(home_weather_icon_3), (icon).c_str());



substitutions:
  clearnight: "\U000F0594"
  cloudy: "\U000F0590"
  exceptional: "\U000F0F2F"
  fog: "\U000F0591"
  hail: "\U000F0592"
  lightning: "\U000F0593"
  lightningrainy: "\U000F067E"
  partlycloudy: "\U000F0595"
  pouring: "\U000F0596"
  rainy: "\U000F0597"
  snowy: "\U000F0598"
  snowyrainy: "\U000F067F"
  sunny: "\U000F0599"
  windy: "\U000F059D"
  windyvariant: "\U000F059E"
  sunnyoff: "\U000F14E4"



font:
  - file: "fonts/materialdesignicons-webfont.ttf"
    id: weather_icons
    size: 48
    bpp: 4
    glyphs: [
      "\U000F0594", # clear-night
      "\U000F0590", # cloudy
      "\U000F0F2F", # exceptional
      "\U000F0591", # fog
      "\U000F0592", # hail
      "\U000F0593", # lightning
      "\U000F067E", # lightning-rainy
      "\U000F0595", # partlycloudy
      "\U000F0596", # pouring
      "\U000F0597", # rainy
      "\U000F0598", # snowy
      "\U000F067F", # snowy-rainy
      "\U000F0599", # sunny
      "\U000F059D", # windy
      "\U000F059E", # windy-variant
      "\U000F14E4", # sunny-off
      "\U000F0F31", # mdi-weather-night-partly-cloudy
      "\U000F05A9", # mdi-wifi
      "\U000F052C", # mdi-train
      "\U000F058E", 
      ]


